# -*- coding: utf-8 -*-
"""Introdução a Data Science.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1u00bLxqq_V-70gXY8mxgw5eVzNbNd8YT

# Analisando as notas em geral
"""

import pandas as pd

notas = pd.read_csv("/content/drive/MyDrive/Colab Notebooks/Alura/Data Science - Analises e visualização de dados/ratings.csv")
notas.head()

notas.shape

notas.columns = ["usuarioId", "filmesId", "nota", "momento"]
notas.head()

notas['nota'].unique()

notas['nota'].value_counts()

print('Media',notas['nota'].mean())
print('Mediana',notas['nota'].median())

notas.head()

notas.nota.plot()

notas.nota.plot(kind='hist')

notas.nota.describe()

!pip install seaborn
import seaborn as sns
import matplotlib.pyplot as plt

sns.boxplot(x=notas.nota)

filmes = pd.read_csv('/content/drive/MyDrive/Colab Notebooks/Alura/Data Science - Analises e visualização de dados/movies.csv')
filmes.columns =["filmeId", "titulo", "generos"]
filmes.head()

notas.head()

"""# Analisando algumas notas por filmes"""

notas.query("filmesId==1").nota.mean()

notas.query("filmesId==2").nota.mean()

medias_por_filme = notas.groupby("filmesId").mean()["nota"]
medias_por_filme.head()

medias_por_filme.plot(kind="hist")

import matplotlib.pyplot as plt

plt.figure(figsize=(5,8))
sns.boxplot(x=medias_por_filme)

medias_por_filme.describe()

sns.distplot(medias_por_filme)

plt.hist(medias_por_filme)
plt.title("Histograma das médias dos filmes")

tmdb = pd.read_csv("/content/drive/MyDrive/Colab Notebooks/Alura/Data Science - Analises e visualização de dados/tmdb_5000_movies.csv")
tmdb.head()

tmdb.original_language.unique()

tmdb["original_language"]

tmdb["original_language"].value_counts()

tmdb["original_language"].value_counts().index

tmdb["original_language"].value_counts().values

tmdb["original_language"].value_counts().to_frame()

tmdb["original_language"].value_counts().to_frame().reset_index()

contagem_de_lingua = tmdb["original_language"].value_counts().to_frame().reset_index()
contagem_de_lingua.columns = ["original_language", "total"]
contagem_de_lingua.head()

sns.barplot(x="original_language", y ="total", data = contagem_de_lingua)

sns.catplot(x = "original_language", kind="count", data= tmdb)

plt.pie(contagem_de_lingua["total"],labels=contagem_de_lingua["original_language"])

total_por_lingua = tmdb["original_language"].value_counts()
  total_geral = total_por_lingua.sum()
  total_de_ingles = total_por_lingua.loc["en"]
  total_do_resto = total_geral - total_de_ingles
  print(total_de_ingles, total_do_resto)

dados = {
    'lingua': ['ingles', 'outros'],
    'total': [total_de_ingles, total_do_resto]

}
dados = pd.DataFrame(dados)
sns.barplot(x='lingua', y='total', data=dados)

plt.pie(dados["total"],labels = dados["lingua"])

total_por_lingua_de_outros_filmes = tmdb.query("original_language != 'en'").original_language.value_counts()
total_por_lingua_de_outros_filmes

filmes_sem_lingua_original_em_ingles = tmdb.query("original_language != 'en'")
sns.catplot(x = "original_language", kind="count", data = filmes_sem_lingua_original_em_ingles)

filmes_sem_lingua_original_em_ingles = tmdb.query("original_language != 'en'")

sns.catplot(x = "original_language", kind="count", 
            data = filmes_sem_lingua_original_em_ingles,
            aspect = 2,
            palette="GnBu_d",
            order = total_por_lingua_de_outros_filmes.index)

"""# Análise dos dois filmes mais conceituados """

filmes.head(2)

notas.head()

notas_do_toy_story = notas.query("filmesId==1")
notas_do_jumanji = notas.query("filmesId==2")
print(len(notas_do_toy_story), len(notas_do_jumanji))

print("Nota média do Toy Story %.2f" % notas_do_toy_story.nota.mean())
print("Nota média do Jumanji %.2f" % notas_do_jumanji.nota.mean())

print("Nota média do Toy Story %.2f" % notas_do_toy_story.nota.median())
print("Nota média do Jumanji %.2f" % notas_do_jumanji.nota.median())

import numpy as np

filme1 = np.append(np.array([2.5] * 10),np.array([3.5] * 10))

filme2 = np.append(np.array([5] * 10),np.array([1] * 10))

print(filme1.mean(), filme2.mean())
print(np.std(filme1), np.std(filme2))
print(np.median(filme1), np.median(filme2) )

sns.distplot(filme1)
sns.distplot(filme2)

plt.hist(filme1)
plt.hist(filme2)

sns.boxplot(x=filme1)
sns.boxplot(x=filme2)

plt.boxplot([filme1,filme2])

sns.boxplot(x=notas_do_toy_story.nota)

plt.boxplot([notas_do_toy_story.nota, notas_do_jumanji.nota])

sns.boxplot(x ="filmesId", y = "nota", data = notas.query("filmesId in [1,2]"))

print(notas_do_toy_story.nota.std(), notas_do_jumanji.nota.std())

